{"version":3,"sources":["public/CONFIG.js","RecentlyTab.js","SearchTab.js","App.js","index.js"],"names":["SEARCH_URL","COLLECTION_SEARCH_URL","moment","locale","weekdays","weekdaysShort","SearchBtn","styled","button","props","active","RecentlyTab","state","isModalOpen","isLoading","tableList","rs","docs","totalDocs","limit","totalPages","page","pagingCounter","hasPrevPage","hasNextPage","prevPage","nextPage","searchType","onClickLoadBtn","bind","this","setState","axios","get","params","sortType","then","concat","data","fetchSearchList","item","console","log","Fragment","style","position","width","top","zIndex","LinearProgress","variant","TableContainer","component","Paper","maxHeight","boxSizing","padding","Table","TableHead","TableRow","TableCell","type","onClick","onClickSortBtn","ArrowDropDownOutlined","TableBody","map","index","key","platPlc","bldNm","splotNm","jimokCdNm","jiyukCdNm","jiguCdNm","platArea","archArea","bcRat","totArea","stcnsSchedDay","stcnsDelayDay","realStcnsDay","archPmsDay","useAprDay","crtnDay","time","format","Button","color","onClickModalOpenBtn","Icon","TableFooter","colSpan","Modal","open","onClose","onClickModalCloseBtn","Grid","container","direction","justify","alignItems","height","overflow","xs","sm","React","Component","App","searchMonth","sidoCode","sidoList","sigoonCode","sigoonList","dongCode","dongList","searchStr","searchCode","searchResultList","tablePage","tableTotalCount","handleChange","$httpLoadArchInfo","onClickBubjungdongSearchBtn","onClickChips","onClickSelectSearchBtn","onChangePage","onChangeSearchMonth","$httpLoadSidoCodeList","code","i","bubjungdongList","indexOf","push","name","obj","e","target","value","authkey","admVOList","admCode","serviceKey","decodeURIComponent","sigunguCd","slice","bjdongCd","platGbCd","bun","ji","startDate","subtract","endDate","numOfRows","pageNo","items","totalCount","event","$httpLoadSigoonCodeList","$httpLoadDongCodeList","margin","NativeSelect","onChange","marginRight","className","admCodeNm","Input","placeholder","onKeyUp","keyCode","Chip","size","label","deleteIcon","marginTop","stickyHeader","aria-label","vlRat","mainBldCnt","atchBldDongCnt","mainPurpsCdNm","hhldCnt","hoCnt","fmlyCnt","totPkngCnt","silHoHhldCnt","silHoHhldArea","TablePagination","count","rowsPerPage","SelectProps","display","useStyles","makeStyles","tabPanel","TabPanel","children","other","Typography","role","hidden","id","Box","p","ReactDOM","render","useState","setValue","classes","AppBar","Tabs","newValue","Tab","SearchTab","document","getElementById"],"mappings":"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","file":"static/js/main.b6a5c965.chunk.js","sourcesContent":["export const SEARCH_MONTH = 6;\nexport const SIDO_CODE_URL = \"http://openapi.nsdi.go.kr/nsdi/eios/service/rest/AdmService/admCodeList.json\";\nexport const SIDO_CODE_KEY = \"\";\nexport const SIGOON_CODE_URL = \"http://openapi.nsdi.go.kr/nsdi/eios/service/rest/AdmService/admSiList.json\";\nexport const SIGOON_CODE_KEY = \"\";\nexport const DONG_CODE_URL = \"http://openapi.nsdi.go.kr/nsdi/eios/service/rest/AdmService/admDongList.json\";\nexport const DONG_CODE_KEY = \"\";\n\nexport const SEARCH_KEY = \"\";\n\nconst SERVER_URL = process.env.NODE_ENV == \"development\" ? \"http://localhost:5001\" : \"\";\n\nexport const SEARCH_URL = `${SERVER_URL}/api/search`;\nexport const COLLECTION_SEARCH_URL = `${SERVER_URL}/api/collection`;\n","import React from 'react';\n\nimport axios from 'axios';\n\nimport Modal from '@material-ui/core/Modal';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport { ArrowDropDownOutlined } from '@material-ui/icons';\n\nimport moment from 'moment';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\nimport { COLLECTION_SEARCH_URL } from './public/CONFIG';\n\nmoment.locale('ko', {\n  weekdays: ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일'],\n  weekdaysShort: ['일', '월', '화', '수', '목', '금', '토'],\n});\n\nconst SearchBtn = styled.button`\n  color: ${(props) => (props.active ? '#db7093' : '#000000de')};\n  font-size: 1em;\n  border: none;\n  cursor: pointer;\n`;\n\nclass RecentlyTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n      isLoading: false,\n      tableList: [],\n      rs: {\n        docs: [],\n        totalDocs: null,\n        limit: null,\n        totalPages: null,\n        page: null,\n        pagingCounter: null,\n        hasPrevPage: null,\n        hasNextPage: null,\n        prevPage: null,\n        nextPage: 1,\n      },\n      searchType: 'crtnDay',\n    };\n\n    this.onClickLoadBtn = this.onClickLoadBtn.bind(this);\n  }\n\n  componentDidMount() {\n    this.onClickLoadBtn();\n  }\n\n  fetchSearchList() {\n    let page;\n    page = this.state.rs.nextPage;\n    if (page) {\n      this.setState({\n        ...this.state,\n        isLoading: true,\n      });\n      axios\n        .get(`${COLLECTION_SEARCH_URL}/${page}`, {\n          params: {\n            sortType: this.state.searchType,\n          },\n        })\n        .then((rs) => {\n          this.state.tableList = this.state.tableList.concat(rs.data.docs);\n          this.setState({\n            ...this.state,\n            isLoading: false,\n            rs: rs.data,\n          });\n        });\n    }\n  }\n\n  // 검색하기 누른 경우\n  onClickLoadBtn() {\n    this.fetchSearchList();\n  }\n\n  onClickSortBtn(searchType) {\n    this.setState(\n      {\n        isModalOpen: false,\n        isLoading: false,\n        tableList: [],\n        rs: {\n          docs: [],\n          totalDocs: null,\n          limit: null,\n          totalPages: null,\n          page: null,\n          pagingCounter: null,\n          hasPrevPage: null,\n          hasNextPage: null,\n          prevPage: null,\n          nextPage: 1,\n        },\n        searchType: searchType,\n      },\n      () => {\n        this.fetchSearchList();\n      },\n    );\n  }\n\n  onClickModalOpenBtn(item) {\n    console.log(this);\n    console.log(item);\n    this.setState({\n      ...this.state,\n      isModalOpen: true,\n    });\n  }\n\n  render() {\n    const { tableList, isLoading, isModalOpen, searchType } = this.state;\n    const { hasNextPage } = this.state.rs;\n    return (\n      <React.Fragment>\n        <div style={{ position: 'fixed', width: '100%', top: '48px', zIndex: 1 }}>\n          {isLoading ? <LinearProgress variant=\"query\" /> : null}\n        </div>\n        <TableContainer\n          component={Paper}\n          style={{\n            maxHeight: '100%',\n            width: '100%',\n            boxSizing: 'border-box',\n            padding: '0',\n          }}\n        >\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>대지위치</TableCell>\n                <TableCell>건물명</TableCell>\n                <TableCell>특수지명</TableCell>\n\n                <TableCell>지목코드명</TableCell>\n                <TableCell>지역코드명</TableCell>\n                <TableCell>지구코드명</TableCell>\n\n                <TableCell>대지면적(㎡)</TableCell>\n                <TableCell>건축면적(㎡)</TableCell>\n                <TableCell>건폐율(%)</TableCell>\n                <TableCell>연면적(㎡)</TableCell>\n\n                <TableCell>착공예정일</TableCell>\n                <TableCell>착공연기일</TableCell>\n                <TableCell>실제착공일</TableCell>\n                <TableCell>\n                  <SearchBtn\n                    type=\"button\"\n                    active={searchType === 'archPmsDay'}\n                    onClick={() => {\n                      this.onClickSortBtn('archPmsDay');\n                    }}\n                  >\n                    건축허가일\n                    <ArrowDropDownOutlined></ArrowDropDownOutlined>\n                  </SearchBtn>\n                </TableCell>\n                <TableCell>사용승인일</TableCell>\n                <TableCell>\n                  <SearchBtn\n                    type=\"button\"\n                    active={searchType === 'crtnDay'}\n                    onClick={() => {\n                      this.onClickSortBtn('crtnDay');\n                    }}\n                  >\n                    생성일자\n                    <ArrowDropDownOutlined></ArrowDropDownOutlined>\n                  </SearchBtn>\n                </TableCell>\n\n                <TableCell>수집일</TableCell>\n                <TableCell></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tableList.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell>{item.platPlc}</TableCell>\n                  <TableCell>{item.bldNm}</TableCell>\n                  <TableCell>{item.splotNm}</TableCell>\n\n                  <TableCell>{item.jimokCdNm}</TableCell>\n                  <TableCell>{item.jiyukCdNm}</TableCell>\n                  <TableCell>{item.jiguCdNm}</TableCell>\n\n                  <TableCell>{item.platArea}</TableCell>\n                  <TableCell>{item.archArea}</TableCell>\n                  <TableCell>{item.bcRat}</TableCell>\n                  <TableCell>{item.totArea}</TableCell>\n\n                  <TableCell>{item.stcnsSchedDay}</TableCell>\n                  <TableCell>{item.stcnsDelayDay}</TableCell>\n                  <TableCell>{item.realStcnsDay}</TableCell>\n                  <TableCell>{item.archPmsDay}</TableCell>\n                  <TableCell>{item.useAprDay}</TableCell>\n                  <TableCell>{item.crtnDay}</TableCell>\n\n                  <TableCell>{moment(item.time).format('YYYYMMDD')}</TableCell>\n                  <TableCell>\n                    <Button color=\"secondary\" onClick={this.onClickModalOpenBtn.bind(this, item)}>\n                      <Icon>zoom_in</Icon>\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TableCell colSpan=\"21\">\n                  {hasNextPage === false ? (\n                    <div>더이상 수집 데이터가 없습니다</div>\n                  ) : (\n                    <Button color=\"secondary\" onClick={this.onClickLoadBtn}>\n                      <Icon>add_box</Icon>\n                    </Button>\n                  )}\n                </TableCell>\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n\n        <Modal open={isModalOpen} onClose={this.onClickModalCloseBtn}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{ height: '100%', overflow: 'auto', padding: '20px 0' }}\n          >\n            <Grid item xs={12} sm={6}>\n              <Paper>상세보기 기능 준비</Paper>\n            </Grid>\n          </Grid>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default RecentlyTab;\n","import React from 'react';\nimport './public/App.css';\n\nimport axios from 'axios';\n\nimport Chip from '@material-ui/core/Chip';\nimport Icon from '@material-ui/core/Icon';\nimport Input from '@material-ui/core/Input';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\n\nimport bubjungdongList from './public/ADDRESS_DB.json';\n\nimport moment from 'moment';\n\nimport {\n  SIDO_CODE_URL,\n  SIDO_CODE_KEY,\n  SIGOON_CODE_URL,\n  SIGOON_CODE_KEY,\n  DONG_CODE_URL,\n  DONG_CODE_KEY,\n  SEARCH_URL,\n  SEARCH_KEY,\n} from './public/CONFIG';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n\n      searchMonth: 6,\n\n      sidoCode: '',\n      sidoList: [],\n      sigoonCode: '',\n      sigoonList: [],\n      dongCode: '',\n      dongList: [],\n\n      searchStr: '',\n      searchCode: '',\n      searchResultList: [],\n\n      tableList: [],\n      tablePage: 0,\n      tableTotalCount: 0,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.$httpLoadArchInfo = this.$httpLoadArchInfo.bind(this);\n    this.onClickBubjungdongSearchBtn = this.onClickBubjungdongSearchBtn.bind(this);\n    this.onClickChips = this.onClickChips.bind(this);\n    this.onClickSelectSearchBtn = this.onClickSelectSearchBtn.bind(this);\n    this.onChangePage = this.onChangePage.bind(this);\n    this.onChangeSearchMonth = this.onChangeSearchMonth.bind(this);\n  }\n\n  componentDidMount() {\n    this.$httpLoadSidoCodeList();\n  }\n\n  onClickChips(item) {\n    this.setState(\n      {\n        ...this.state,\n        tableList: [],\n        tablePage: 0,\n        searchCode: item.code,\n      },\n      () => {\n        this.$httpLoadArchInfo();\n      },\n    );\n  }\n\n  // 디비 검색\n  onClickBubjungdongSearchBtn() {\n    const { searchStr } = this.state;\n    const searchResultList = [];\n    for (var i in bubjungdongList) {\n      if (bubjungdongList[i].indexOf(searchStr) !== -1) {\n        // 현재는 동까지 정보가 입력되어야만 검색 가능\n        searchResultList.push({\n          code: i,\n          name: bubjungdongList[i],\n        });\n      }\n    }\n    this.setState({\n      ...this.state,\n      searchResultList,\n    });\n  }\n\n  onClickSelectSearchBtn() {\n    this.setState(\n      {\n        ...this.state,\n        searchStr: '',\n        searchResultList: [],\n        tableList: [],\n        tablePage: 0,\n        searchCode: this.state.dongCode + '00',\n      },\n      () => {\n        this.$httpLoadArchInfo();\n      },\n    );\n  }\n\n  onChangePage(obj, page) {\n    this.setState(\n      {\n        tableList: [],\n        tablePage: page,\n      },\n      () => {\n        this.$httpLoadArchInfo();\n      },\n    );\n  }\n\n  onChangeSearchMonth(e) {\n    const { searchCode } = this.state;\n    if (searchCode) {\n      this.setState(\n        {\n          ...this.state,\n          searchMonth: e.target.value,\n          tableList: [],\n          tablePage: 0,\n        },\n        () => {\n          this.$httpLoadArchInfo();\n        },\n      );\n    } else {\n      this.setState({\n        ...this.state,\n        searchMonth: e.target.value,\n      });\n    }\n  }\n\n  $httpLoadSidoCodeList() {\n    this.setState({\n      ...this.state,\n      isLoading: true,\n    });\n    axios\n      .get(SIDO_CODE_URL, {\n        params: { authkey: SIDO_CODE_KEY },\n      })\n      .then(({ data }) => {\n        this.setState({\n          ...this.state,\n          isLoading: false,\n          sidoList: data.admVOList.admVOList,\n          sidoCode: '',\n          sigoonCode: '',\n          sigoonList: [],\n          dongCode: '',\n          dongList: [],\n        });\n      });\n  }\n\n  $httpLoadSigoonCodeList() {\n    const { sidoCode } = this.state;\n    this.setState({\n      ...this.state,\n      isLoading: true,\n    });\n    axios\n      .get(SIGOON_CODE_URL, {\n        params: {\n          admCode: sidoCode,\n          authkey: SIGOON_CODE_KEY,\n        },\n      })\n      .then(({ data }) => {\n        this.setState({\n          ...this.state,\n          isLoading: false,\n          sigoonCode: '',\n          sigoonList: data.admVOList.admVOList,\n          dongCode: '',\n          dongList: [],\n        });\n      });\n  }\n\n  $httpLoadDongCodeList() {\n    const { sigoonCode } = this.state;\n    this.setState({\n      ...this.state,\n      isLoading: true,\n    });\n    axios\n      .get(DONG_CODE_URL, {\n        params: {\n          admCode: sigoonCode,\n          authkey: DONG_CODE_KEY,\n        },\n      })\n      .then(({ data }) => {\n        this.setState({\n          ...this.state,\n          isLoading: false,\n          dongCode: '',\n          dongList: data.admVOList.admVOList,\n        });\n      });\n  }\n\n  $httpLoadArchInfo() {\n    const { searchCode, tablePage, searchMonth } = this.state;\n    this.setState({\n      ...this.state,\n      isLoading: true,\n    });\n    axios\n      .get(SEARCH_URL, {\n        params: {\n          serviceKey: decodeURIComponent(SEARCH_KEY),\n          sigunguCd: searchCode.slice(0, 5),\n          bjdongCd: searchCode.slice(5, 10),\n          platGbCd: '0',\n          bun: '',\n          ji: '',\n          startDate: moment()\n            .subtract(+searchMonth, 'months')\n            .format('YYYYMMDD'),\n          endDate: moment().format('YYYYMMDD'),\n          numOfRows: '10',\n          pageNo: tablePage === 0 ? 1 : tablePage,\n        },\n      })\n      .then((rs) => {\n        if (rs.data.items[0]) {\n          this.setState({\n            ...this.state,\n            isLoading: false,\n            tableList: rs.data.items[0].item,\n            tableTotalCount: rs.data.totalCount[0],\n          });\n        } else {\n          this.setState({\n            ...this.state,\n            isLoading: false,\n            tableList: [],\n            tableTotalCount: 0,\n          });\n        }\n      });\n  }\n\n  handleChange(name, event) {\n    this.setState(\n      {\n        ...this.state,\n        [name]: event.target.value,\n      },\n      () => {\n        const { searchCode } = this.state;\n        if (name === 'sidoCode') {\n          this.$httpLoadSigoonCodeList();\n        } else if (name === 'sigoonCode') {\n          this.$httpLoadDongCodeList();\n        }\n      },\n    );\n  }\n\n  render() {\n    const { state } = this;\n    const {\n      isLoading,\n      sidoList,\n      sigoonList,\n      dongList,\n      searchStr,\n      searchResultList,\n      searchCode,\n      tableList,\n      tablePage,\n      tableTotalCount,\n    } = state;\n\n    return (\n      <div>\n        <div style={{ position: 'fixed', width: '100%', top: '48px', zIndex: 1 }}>\n          {isLoading ? <LinearProgress variant=\"query\" /> : null}\n        </div>\n        <div style={{ padding: '25px' }}>\n          <div style={{ margin: '10px' }}>\n            최근\n            <NativeSelect value={state.searchMonth} onChange={this.onChangeSearchMonth}>\n              <option value=\"1\">1개월</option>\n              <option value=\"2\">2개월</option>\n              <option value=\"3\">3개월</option>\n              <option value=\"4\">4개월</option>\n              <option value=\"5\">5개월</option>\n              <option value=\"6\">6개월</option>\n              <option value=\"7\">7개월</option>\n              <option value=\"8\">8개월</option>\n              <option value=\"9\">9개월</option>\n              <option value=\"10\">10개월</option>\n              <option value=\"11\">11개월</option>\n              <option value=\"12\">12개월</option>\n            </NativeSelect>\n            개월간 검색\n          </div>\n          <div>\n            <NativeSelect\n              style={{\n                marginRight: '10px',\n              }}\n              className=\"mr-2\"\n              value={state.sidoCode}\n              onChange={(e) => {\n                this.handleChange('sidoCode', e);\n              }}\n            >\n              <option>시/도 선택</option>\n              {sidoList.map((item, index) => {\n                return (\n                  <option key={index} value={item.admCode}>\n                    {item.admCodeNm}\n                  </option>\n                );\n              })}\n            </NativeSelect>\n\n            <NativeSelect\n              style={{\n                marginRight: '10px',\n              }}\n              value={state.sigoonCode}\n              onChange={(e) => {\n                this.handleChange('sigoonCode', e);\n              }}\n            >\n              <option>시/군 선택</option>\n              {sigoonList.map((item, index) => {\n                return (\n                  <option key={index} value={item.admCode}>\n                    {item.admCodeNm}\n                  </option>\n                );\n              })}\n            </NativeSelect>\n\n            <NativeSelect\n              style={{\n                marginRight: '20px',\n              }}\n              value={state.dongCode}\n              onChange={(e) => {\n                this.handleChange('dongCode', e);\n              }}\n            >\n              <option>동 선택</option>\n              {dongList.map((item, index) => {\n                return (\n                  <option key={index} value={item.admCode}>\n                    {item.admCodeNm}\n                  </option>\n                );\n              })}\n            </NativeSelect>\n            <Button color=\"secondary\" onClick={this.onClickSelectSearchBtn}>\n              검색하기<Icon>search</Icon>\n            </Button>\n          </div>\n          <div>\n            <Input\n              placeholder=\"주소\"\n              value={searchStr}\n              onChange={(e) => {\n                this.setState({\n                  ...this.state,\n                  searchStr: e.target.value,\n                });\n              }}\n              onKeyUp={(e) => {\n                if (e.keyCode === 13) {\n                  this.onClickBubjungdongSearchBtn();\n                }\n              }}\n            />\n            <Button color=\"secondary\" onClick={this.onClickBubjungdongSearchBtn}>\n              법정동 검색하기<Icon>search</Icon>\n            </Button>\n          </div>\n          <div>\n            {searchResultList.map((item, index) => {\n              return (\n                <Chip\n                  key={index}\n                  size=\"small\"\n                  label={item.name}\n                  onClick={() => {\n                    this.onClickChips(item);\n                  }}\n                  deleteIcon={<Icon>search</Icon>}\n                  color={searchCode === item.code ? 'primary' : 'default'}\n                  style={{ margin: '5px 5px' }}\n                />\n              );\n            })}\n          </div>\n          <div\n            style={{\n              marginTop: '10px',\n            }}\n          >\n            <TableContainer component={Paper}>\n              <Table stickyHeader aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>대지위치</TableCell>\n                    <TableCell>대지구분코드</TableCell>\n                    <TableCell>건물명</TableCell>\n                    <TableCell>대지면적</TableCell>\n                    <TableCell>건축면적</TableCell>\n\n                    <TableCell>용적률</TableCell>\n                    <TableCell>주건축물수</TableCell>\n                    <TableCell>부속건축물동수</TableCell>\n                    <TableCell>주용도코드명</TableCell>\n                    <TableCell>세대수</TableCell>\n                    <TableCell>호수</TableCell>\n                    <TableCell>가구수</TableCell>\n                    <TableCell>총주차수</TableCell>\n\n                    <TableCell>착공예정일</TableCell>\n                    <TableCell>착공연기일</TableCell>\n                    <TableCell>실제착공일</TableCell>\n                    <TableCell>건축허가일</TableCell>\n                    <TableCell>사용승인일</TableCell>\n\n                    <TableCell>실호세대수</TableCell>\n                    <TableCell>실호세대수면적</TableCell>\n\n                    <TableCell>생성일자</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {!tableTotalCount ? (\n                    <TableRow>\n                      <TableCell colSpan={21}>데이터가 없습니다.</TableCell>\n                    </TableRow>\n                  ) : null}\n                  {tableList.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.platPlc}</TableCell>\n                      <TableCell>{item.platGbCd}</TableCell>\n                      <TableCell>{item.bldNm}</TableCell>\n                      <TableCell>{item.platArea}</TableCell>\n                      <TableCell>{item.archArea}</TableCell>\n\n                      <TableCell>{item.vlRat}</TableCell>\n                      <TableCell>{item.mainBldCnt}</TableCell>\n                      <TableCell>{item.atchBldDongCnt}</TableCell>\n                      <TableCell>{item.mainPurpsCdNm}</TableCell>\n                      <TableCell>{item.hhldCnt}</TableCell>\n                      <TableCell>{item.hoCnt}</TableCell>\n                      <TableCell>{item.fmlyCnt}</TableCell>\n                      <TableCell>{item.totPkngCnt}</TableCell>\n\n                      <TableCell>{item.stcnsSchedDay}</TableCell>\n                      <TableCell>{item.stcnsDelayDay}</TableCell>\n                      <TableCell>{item.realStcnsDay}</TableCell>\n                      <TableCell>{item.archPmsDay}</TableCell>\n                      <TableCell>{item.useAprDay}</TableCell>\n\n                      <TableCell>{item.silHoHhldCnt}</TableCell>\n                      <TableCell>{item.silHoHhldArea}</TableCell>\n\n                      <TableCell>{item.crtnDay}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n                <TableFooter>\n                  <TableRow>\n                    <TablePagination\n                      colSpan={21}\n                      count={+tableTotalCount}\n                      rowsPerPage={10}\n                      page={tablePage}\n                      SelectProps={{\n                        style: {\n                          display: 'none',\n                        },\n                      }}\n                      onChangePage={this.onChangePage}\n                    />\n                  </TableRow>\n                </TableFooter>\n              </Table>\n            </TableContainer>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nimport RecentlyTab from \"./RecentlyTab\";\nimport SearchTab from \"./SearchTab\";\n\nconst useStyles = makeStyles({\n  tabPanel: {\n    height: \"calc(100% - 48px)\"\n  }\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography component=\"div\" role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} {...other}>\n      {value === index && (\n        <Box p={3} className=\"full-height\" style={{ padding: 0 }}>\n          {children}\n        </Box>\n      )}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nexport default function SimpleTabs() {\n  const [value, setValue] = React.useState(0);\n  const classes = useStyles();\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange}>\n          <Tab label=\"지역 검색하기\" />\n          <Tab label=\"전국 최신 데이터 보기\" />\n        </Tabs>\n      </AppBar>\n      <TabPanel className={classes.tabPanel} value={value} index={0}>\n        <SearchTab></SearchTab>\n      </TabPanel>\n      <TabPanel className={classes.tabPanel} value={value} index={1}>\n        <RecentlyTab></RecentlyTab>\n      </TabPanel>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./public/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}